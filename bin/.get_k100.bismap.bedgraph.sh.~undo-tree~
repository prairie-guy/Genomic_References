(undo-tree-save-format-version . 1)
"db256936a402fa524d10cc7f77e1856f2cd63746"
[nil nil nil nil (26406 20201 83375 414000) 0 nil]
([nil nil ((21 . 22) (apply yas--snippet-revive 1 22 #s(yas--snippet nil nil #s(yas--exit 20 nil) 0 nil nil nil nil)) (20 . 21) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 20 nil) 0 nil nil nil nil)) (1 . 21)) nil (26406 20201 83373 984000) 0 nil])
([nil nil ((nil rear-nonsticky nil 50 . 51) (nil fontified nil 22 . 51) (22 . 51)) nil (26406 20201 83372 214000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg chg fontified nil)) . 54) (52 . 54) (51 . 53)) nil (26406 20201 83370 754000) 0 nil])
([nil nil ((nil rear-nonsticky nil 229 . 230) (nil fontified nil 54 . 230) (54 . 230)) nil (26406 20201 83369 284000) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-delimiter-face ws-butler-chg chg fontified nil)) . 234) (233 . 234) (233 . 234) (#(" " 0 1 (face font-lock-comment-delimiter-face ws-butler-chg chg fontified nil)) . 232) (undo-tree-id140 . -1) (233 . 234) (#("
" 0 1 (ws-butler-chg chg fontified nil)) . 233) (231 . 233) (230 . 232)) nil (26406 20201 83367 264000) 0 nil])
([nil nil ((#("#" 0 1 (face font-lock-comment-delimiter-face ws-butler-chg chg fontified t)) . -233) (undo-tree-id139 . -1) 234) nil (26406 20201 83363 934000) 0 nil])
([nil nil ((233 . 235)) nil (26406 20201 83361 944000) 0 nil])
([nil nil ((235 . 250)) nil (26406 20201 83361 64000) 0 nil])
([nil nil ((nil rear-nonsticky nil 311 . 312) (nil fontified nil 250 . 312) (250 . 312)) nil (26406 20201 83360 24000) 0 nil])
([nil nil ((#("#" 0 1 (face font-lock-comment-delimiter-face ws-butler-chg chg fontified t)) . -233) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (#(" " 0 1 (face font-lock-comment-delimiter-face ws-butler-chg chg fontified t)) . -234) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (#("D" 0 1 (face font-lock-comment-face ws-butler-chg chg fontified t)) . -235) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (#("o" 0 1 (face font-lock-comment-face ws-butler-chg chg fontified t)) . -236) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (#("w" 0 1 (face font-lock-comment-face ws-butler-chg chg fontified t)) . -237) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (#("n" 0 1 (face font-lock-comment-face ws-butler-chg chg fontified t)) . -238) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (#("l" 0 1 (face font-lock-comment-face ws-butler-chg chg fontified t)) . -239) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (#("o" 0 1 (face font-lock-comment-face ws-butler-chg chg fontified t)) . -240) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (#("a" 0 1 (face font-lock-comment-face ws-butler-chg chg fontified t)) . -241) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (#("d" 0 1 (face font-lock-comment-face ws-butler-chg chg fontified t)) . -242) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (#(" " 0 1 (face font-lock-comment-face ws-butler-chg chg fontified t)) . -243) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (#("h" 0 1 (face font-lock-comment-face ws-butler-chg chg fontified t)) . -244) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (#("e" 0 1 (face font-lock-comment-face ws-butler-chg chg fontified t)) . -245) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (#("r" 0 1 (face font-lock-comment-face ws-butler-chg chg fontified t)) . -246) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (#("e" 0 1 (face font-lock-comment-face ws-butler-chg chg fontified t)) . -247) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (#(":" 0 1 (face font-lock-comment-face ws-butler-chg chg fontified t)) . -248) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (#(" " 0 1 (face font-lock-comment-face ws-butler-chg chg fontified t)) . -249) (undo-tree-id137 . -1) (undo-tree-id138 . -1) 250) nil (26406 20201 83354 674000) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-delimiter-face ws-butler-chg chg fontified nil)) . 234) (233 . 234) (232 . 234)) nil (26406 20201 83325 913000) 0 nil])
([nil nil ((234 . 236)) nil (26406 20201 83324 613000) 0 nil])
([nil nil ((#("C" 0 1 (face font-lock-comment-face ws-butler-chg chg fontified t)) . -235) (undo-tree-id104 . -1) 236) nil (26406 20201 83323 623000) 0 nil])
([nil nil ((235 . 239)) nil (26406 20201 83321 743000) 0 nil])
([nil nil ((239 . 248)) nil (26406 20201 83320 943000) 0 nil])
([nil nil ((249 . 256)) nil (26406 20201 83320 143000) 0 nil])
([nil nil ((318 . 320)) nil (26406 20201 83319 383000) 0 nil])
([nil nil ((320 . 332)) nil (26406 20201 83318 583000) 0 nil])
([nil nil ((332 . 333)) nil (26406 20201 83317 763000) 0 nil])
([nil nil ((333 . 336)) nil (26406 20201 83316 913000) 0 nil])
([nil nil ((319 . 320)) nil (26406 20201 83316 133000) 0 nil])
([nil nil ((254 . 256)) nil (26406 20201 83315 383000) 0 nil])
([nil nil ((256 . 258)) nil (26406 20201 83314 553000) 0 nil])
([nil nil ((337 . 341)) nil (26406 20201 83313 793000) 0 nil])
([nil nil ((323 . 325)) nil (26406 20201 83312 963000) 0 nil])
([nil nil ((#("s" 0 1 (ws-butler-chg chg fontified t)) . -323) (undo-tree-id102 . -1) (#("i" 0 1 (ws-butler-chg chg fontified t)) . -324) (undo-tree-id103 . -1) 325) nil (26406 20201 83311 653000) 0 nil])
([nil nil ((323 . 328)) nil (26406 20201 83308 613000) 0 nil])
([nil nil ((328 . 329)) nil (26406 20201 83307 823000) 0 nil])
([nil nil ((nil rear-nonsticky nil 351 . 352) (nil fontified nil 329 . 352) (329 . 352)) nil (26406 20201 83306 863000) 0 nil])
([nil nil ((328 . 331)) nil (26406 20201 83305 583000) 0 nil])
([nil nil ((355 . 356)) nil (26406 20201 83304 733000) 0 nil])
([nil nil ((356 . 362)) nil (26406 20201 83303 873000) 0 nil])
([nil nil ((362 . 363)) nil (26406 20201 83303 33000) 0 nil])
([nil nil ((nil rear-nonsticky nil 382 . 383) (nil fontified nil 363 . 383) (363 . 383)) nil (26406 20201 83302 3000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t ws-butler-chg chg)) . -347) (undo-tree-id97 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg)) . -348) (undo-tree-id98 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg)) . -349) (undo-tree-id99 . -1) (#("p" 0 1 (fontified t ws-butler-chg chg)) . -350) (undo-tree-id100 . -1) (#("h" 0 1 (fontified t ws-butler-chg chg)) . -351) (undo-tree-id101 . -1) 352) nil (26406 20201 83299 803000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t ws-butler-chg chg)) . -376) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (#("h" 0 1 (fontified t rear-nonsticky t ws-butler-chg chg)) . -377) (undo-tree-id95 . -1) (undo-tree-id96 . -1) 378) nil (26406 20201 83287 493000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t ws-butler-chg chg)) . -373) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg)) . -374) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg)) . -375) (undo-tree-id91 . -1) (undo-tree-id92 . -1) 376) nil (26406 20201 83282 603000) 0 nil])
([nil nil ((#("bismap=k100.bismap.bed" 0 6 (face font-lock-variable-name-face fontified t ws-butler-chg chg) 6 7 (fontified t ws-butler-chg chg) 7 22 (fontified t ws-butler-chg chg)) . 351) (undo-tree-id85 . -7) (undo-tree-id86 . -22)) nil (26406 20201 83276 673000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 351) (undo-tree-id84 . -1)) nil (26406 20201 83274 163000) 0 nil])
([nil nil ((#("_" 0 1 (face font-lock-variable-name-face ws-butler-chg chg fontified t)) . -328) (undo-tree-id81 . -1) (#("g" 0 1 (face font-lock-variable-name-face ws-butler-chg chg fontified t)) . -329) (undo-tree-id82 . -1) (#("z" 0 1 (face font-lock-variable-name-face ws-butler-chg chg fontified t)) . -330) (undo-tree-id83 . -1) 331) nil (26406 20201 83271 973000) 0 nil])
([nil nil ((368 . 371)) nil (26406 20201 83267 853000) 0 nil])
([nil nil ((371 . 376)) nil (26406 20201 83267 63000) 0 nil])
([nil nil ((376 . 378) (#(" " 0 1 (fontified t ws-butler-chg chg)) . 376) (undo-tree-id80 . -1) 377) nil (26406 20201 83265 913000) 0 nil])
([nil nil ((344 . 349)) nil (26406 20201 83263 883000) 0 nil])
([nil nil ((328 . 332)) nil (26406 20201 83263 113000) 0 nil])
([nil nil ((356 . 357)) nil (26406 20201 83262 333000) 0 nil])
([nil nil ((357 . 364)) nil (26406 20201 83261 483000) 0 nil])
([nil nil ((#("k100.bismap.bedgraph.gz" 0 20 (fontified t ws-butler-chg chg) 20 21 (fontified t ws-butler-chg delete) 21 22 (fontified t ws-butler-chg chg) 22 23 (rear-nonsticky t fontified t ws-butler-chg chg)) . 333)) nil (26406 20201 83260 573000) 0 nil])
([nil nil ((nil fontified nil 355 . 356) (nil fontified nil 354 . 355) (nil fontified nil 353 . 354) (nil fontified nil 333 . 353) (333 . 356)) nil (26406 20201 83259 463000) 0 nil])
([nil nil ((nil fontified nil 386 . 387) (nil fontified nil 385 . 386) (nil fontified nil 384 . 385) (nil fontified nil 364 . 384) (364 . 387)) nil (26406 20201 83257 403000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t ws-butler-chg chg)) . -379) (undo-tree-id75 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg)) . -380) (undo-tree-id76 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg)) . -381) (undo-tree-id77 . -1) (#("p" 0 1 (fontified t ws-butler-chg chg)) . -382) (undo-tree-id78 . -1) (#("h" 0 1 (fontified t ws-butler-chg chg)) . -383) (undo-tree-id79 . -1) 384) nil (26406 20201 83254 803000) 0 nil])
([nil nil ((411 . 412)) nil (26406 20201 83249 383000) 0 nil])
([nil nil ((412 . 415)) nil (26406 20201 83248 533000) 0 nil])
([nil nil ((415 . 416)) nil (26406 20201 83247 773000) 0 nil])
([nil nil ((415 . 417)) nil (26406 20201 83246 913000) 0 nil])
([nil nil ((417 . 427)) nil (26406 20201 83246 53000) 0 nil])
([nil nil ((427 . 432)) nil (26406 20201 83245 253000) 0 nil])
([nil nil ((#("1" 0 1 (face font-lock-comment-face fontified t ws-butler-chg chg)) . -430) (undo-tree-id73 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t ws-butler-chg chg)) . -431) (undo-tree-id74 . -1) 432) nil (26406 20201 83244 93000) 0 nil])
([nil nil ((430 . 431)) nil (26406 20201 83241 313000) 0 nil])
([nil nil ((431 . 435)) nil (26406 20201 83240 523000) 0 nil])
([nil nil ((#("X" 0 1 (face font-lock-comment-face fontified t ws-butler-chg chg)) . -430) (undo-tree-id68 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t ws-butler-chg chg)) . -431) (undo-tree-id69 . -1) (#("c" 0 1 (face font-lock-comment-face fontified t ws-butler-chg chg)) . -432) (undo-tree-id70 . -1) (#("h" 0 1 (face font-lock-comment-face fontified t ws-butler-chg chg)) . -433) (undo-tree-id71 . -1) (#("r" 0 1 (face font-lock-comment-face fontified t ws-butler-chg chg)) . -434) (undo-tree-id72 . -1) 435) nil (26406 20201 83238 913000) 0 nil])
([nil nil ((430 . 432)) nil (26406 20201 83233 503000) 0 nil])
([nil nil ((#("X" 0 1 (face font-lock-comment-face fontified t ws-butler-chg chg)) . -430) (undo-tree-id66 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t ws-butler-chg chg)) . -431) (undo-tree-id67 . -1) 432) nil (26406 20201 83232 183000) 0 nil])
([nil nil ((430 . 436)) nil (26406 20201 83229 103000) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face ws-butler-chg chg fontified nil)) . 251) (249 . 251) (248 . 250)) nil (26406 20201 83228 133000) 0 nil])
([nil nil ((251 . 257)) nil (26406 20201 83226 823000) 0 nil])
([nil nil ((#("O" 0 1 (face font-lock-comment-face ws-butler-chg chg fontified t)) . -251) (undo-tree-id60 . -1) (#("n" 0 1 (face font-lock-comment-face ws-butler-chg chg fontified t)) . -252) (undo-tree-id61 . -1) (#("l" 0 1 (face font-lock-comment-face ws-butler-chg chg fontified t)) . -253) (undo-tree-id62 . -1) (#("y" 0 1 (face font-lock-comment-face ws-butler-chg chg fontified t)) . -254) (undo-tree-id63 . -1) (#(" " 0 1 (face font-lock-comment-face ws-butler-chg chg fontified t)) . -255) (undo-tree-id64 . -1) (#("i" 0 1 (face font-lock-comment-face ws-butler-chg chg fontified t)) . -256) (undo-tree-id65 . -1) 257) nil (26406 20201 83224 583000) 0 nil])
([nil nil ((251 . 256)) nil (26406 20201 83215 382000) 0 nil])
([nil nil ((256 . 258)) nil (26406 20201 83214 552000) 0 nil])
([nil nil ((#("w" 0 1 (face font-lock-comment-face ws-butler-chg chg fontified t)) . -256) (undo-tree-id58 . -1) (#("/" 0 1 (face font-lock-comment-face ws-butler-chg chg fontified t)) . -257) (undo-tree-id59 . -1) 258) nil (26406 20201 83213 292000) 0 nil])
([nil nil ((256 . 266)) nil (26406 20201 83210 592000) 0 nil])
([nil nil ((266 . 268)) nil (26406 20201 83209 792000) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face fontified nil ws-butler-chg chg)) . 459) (457 . 459) (456 . 458)) nil (26406 20201 83208 712000) 0 nil])
([nil nil ((#("#" 0 1 (face font-lock-comment-delimiter-face fontified t ws-butler-chg chg)) . -457) (undo-tree-id56 . -1) (#(" " 0 1 (face font-lock-comment-delimiter-face fontified t ws-butler-chg chg)) . -458) (undo-tree-id57 . -1) 459) nil (26406 20201 83207 2000) 0 nil])
([nil nil ((457 . 462)) nil (26406 20201 83204 322000) 0 nil])
([nil nil ((#("$" 0 1 (fontified t ws-butler-chg chg)) . -461) (undo-tree-id55 . -1) 462) nil (26406 20201 83203 282000) 0 nil])
([nil nil ((#("$bismap_src" 0 1 (fontified t ws-butler-chg chg) 1 11 (face font-lock-variable-name-face fontified t ws-butler-chg chg)) . 424)) nil (26406 20201 83201 422000) 0 nil])
([nil nil ((nil rear-nonsticky nil 434 . 435) (nil fontified nil 425 . 435) (nil fontified nil 424 . 425) (424 . 435)) nil (26406 20201 83200 462000) 0 nil])
([nil nil ((nil rear-nonsticky nil 471 . 472) (nil fontified nil 462 . 472) (nil fontified nil 461 . 462) (461 . 472)) nil (26406 20201 83198 752000) 0 nil])
([nil nil ((472 . 475)) nil (26406 20201 83197 332000) 0 nil])
([nil nil ((475 . 481)) nil (26406 20201 83196 472000) 0 nil])
([nil nil ((481 . 483)) nil (26406 20201 83195 612000) 0 nil])
([nil nil ((#(">" 0 1 (ws-butler-chg chg fontified t)) . -481) (undo-tree-id53 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -482) (undo-tree-id54 . -1) 483) nil (26406 20201 83194 232000) 0 nil])
([nil nil ((457 . 461)) nil (26406 20201 83191 282000) 0 nil])
([nil nil ((461 . 462)) nil (26406 20201 83190 462000) 0 nil])
([nil nil ((nil rear-nonsticky nil 472 . 473) (nil fontified nil 463 . 473) (nil fontified nil 462 . 463) (462 . 473)) nil (26406 20201 83189 322000) 0 nil])
([nil nil ((473 . 476)) nil (26406 20201 83187 592000) 0 nil])
([nil nil ((499 . 509)) nil (26406 20201 83186 752000) 0 nil])
([nil nil ((509 . 515)) nil (26406 20201 83185 722000) 0 nil])
([nil nil ((#("p" 0 1 (face font-lock-variable-name-face fontified t ws-butler-chg chg)) . -278) (undo-tree-id52 . -1) 279) nil (26406 20201 83184 202000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-variable-name-face fontified t ws-butler-chg chg)) . -348) (undo-tree-id49 . -1) (#("r" 0 1 (face font-lock-variable-name-face fontified t ws-butler-chg chg)) . -349) (undo-tree-id50 . -1) (#("c" 0 1 (face font-lock-variable-name-face fontified t ws-butler-chg chg)) . -350) (undo-tree-id51 . -1) 351) nil (26406 20201 83181 242000) 0 nil])
([nil nil ((348 . 356)) nil (26406 20201 83177 442000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-variable-name-face fontified t ws-butler-chg chg)) . -436) (undo-tree-id46 . -1) (#("r" 0 1 (face font-lock-variable-name-face fontified t ws-butler-chg chg)) . -437) (undo-tree-id47 . -1) (#("c" 0 1 (face font-lock-variable-name-face fontified t rear-nonsticky t ws-butler-chg chg)) . -438) (undo-tree-id48 . -1) 439) nil (26406 20201 83175 602000) 0 nil])
([nil nil ((436 . 444)) nil (26406 20201 83171 302000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-variable-name-face fontified t ws-butler-chg chg)) . -349) (undo-tree-id39 . -1) (#("d" 0 1 (face font-lock-variable-name-face fontified t ws-butler-chg chg)) . -350) (undo-tree-id40 . -1) (#("g" 0 1 (face font-lock-variable-name-face fontified t ws-butler-chg chg)) . -351) (undo-tree-id41 . -1) (#("r" 0 1 (face font-lock-variable-name-face fontified t ws-butler-chg chg)) . -352) (undo-tree-id42 . -1) (#("a" 0 1 (face font-lock-variable-name-face fontified t ws-butler-chg chg)) . -353) (undo-tree-id43 . -1) (#("p" 0 1 (face font-lock-variable-name-face fontified t ws-butler-chg chg)) . -354) (undo-tree-id44 . -1) (#("h" 0 1 (face font-lock-variable-name-face fontified t ws-butler-chg chg)) . -355) (undo-tree-id45 . -1) 356) nil (26406 20201 83168 752000) 0 nil])
([nil nil ((349 . 350)) nil (26406 20201 83161 232000) 0 nil])
([nil nil ((381 . 385)) nil (26406 20201 83160 302000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-variable-name-face fontified t ws-butler-chg chg)) . -435) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (#("d" 0 1 (face font-lock-variable-name-face fontified t ws-butler-chg chg)) . -436) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (#("g" 0 1 (face font-lock-variable-name-face fontified t ws-butler-chg chg)) . -437) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (#("r" 0 1 (face font-lock-variable-name-face fontified t ws-butler-chg chg)) . -438) (undo-tree-id35 . -1) (#("a" 0 1 (face font-lock-variable-name-face fontified t ws-butler-chg chg)) . -439) (undo-tree-id36 . -1) (#("p" 0 1 (face font-lock-variable-name-face fontified t ws-butler-chg chg)) . -440) (undo-tree-id37 . -1) (#("h" 0 1 (face font-lock-variable-name-face fontified t ws-butler-chg chg)) . -441) (undo-tree-id38 . -1) 442) nil (26406 20201 83157 632000) 0 nil])
([nil nil ((435 . 436)) nil (26406 20201 83148 332000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-variable-name-face fontified t ws-butler-chg chg)) . -471) (undo-tree-id26 . -1) (#("r" 0 1 (face font-lock-variable-name-face fontified t ws-butler-chg chg)) . -472) (undo-tree-id27 . -1) (#("c" 0 1 (face font-lock-variable-name-face fontified t rear-nonsticky t ws-butler-chg chg)) . -473) (undo-tree-id28 . -1) 474) nil (26406 20201 83146 822000) 0 nil])
([nil nil ((471 . 473)) nil (26406 20201 83142 862000) 0 nil])
([nil nil ((#("$" 0 1 (fontified t ws-butler-chg chg)) . -480) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (#("b" 0 1 (face font-lock-variable-name-face fontified t ws-butler-chg chg)) . -481) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (#("i" 0 1 (face font-lock-variable-name-face fontified t ws-butler-chg chg)) . -482) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (#("s" 0 1 (face font-lock-variable-name-face fontified t ws-butler-chg chg)) . -483) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (#("m" 0 1 (face font-lock-variable-name-face fontified t ws-butler-chg chg)) . -484) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (#("a" 0 1 (face font-lock-variable-name-face fontified t ws-butler-chg chg)) . -485) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (#("p" 0 1 (face font-lock-variable-name-face fontified t ws-butler-chg chg)) . -486) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (#("_" 0 1 (face font-lock-variable-name-face fontified t ws-butler-chg chg)) . -487) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (#("s" 0 1 (face font-lock-variable-name-face fontified t ws-butler-chg chg)) . -488) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (#("r" 0 1 (face font-lock-variable-name-face fontified t ws-butler-chg chg)) . -489) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (#("c" 0 1 (face font-lock-variable-name-face fontified t rear-nonsticky t ws-butler-chg chg)) . -490) (undo-tree-id24 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -491) (undo-tree-id25 . -1) 492) nil (26406 20201 83138 802000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t ws-butler-chg chg)) . -499) (undo-tree-id0 . -1) (#("m" 0 1 (fontified t ws-butler-chg chg)) . -500) (undo-tree-id1 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg)) . -501) (undo-tree-id2 . -1) (#("p" 0 1 (fontified t ws-butler-chg chg)) . -502) (undo-tree-id3 . -1) 503) nil (26406 20201 83116 912000) 0 nil])
([nil nil ((499 . 507)) nil (26406 20201 83099 741000) 0 nil])
([nil nil ((497 . 498)) nil (26406 20201 83098 371000) 0 nil])
([nil nil ((509 . 510) (#(" " 0 1 (fontified nil ws-butler-chg delete)) . -509) (508 . 509)) nil (26406 20201 83096 511000) 0 nil])
([nil nil ((#("




" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg delete) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg delete)) . 509) (514 . 514) 510) nil (26406 20201 83091 631000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg chg face font-lock-comment-face fontified nil)) . 271) (269 . 271) (268 . 270) (t 26406 20201 82139 191000)) nil (26406 20248 804229 152000) 0 nil])
([nil nil ((277 . 278)) nil (26406 20248 804226 592000) 0 nil])
([nil nil ((350 . 351)) nil (26406 20248 804224 192000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-delimiter-face ws-butler-chg chg fontified t)) . 270) 277) nil (26406 20248 804218 391000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -428) (undo-tree-id0 . -1) 429 (t 26406 20248 806532 716000)) nil (26406 20437 717739 622000) 0 nil])
([nil nil ((428 . 429)) nil (26406 20437 717725 932000) 0 nil])
([nil nil ((440 . 442) (t 26406 20437 720085 413000)) nil (26406 20940 204538 261000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg chg fontified t)) . -441) (undo-tree-id43 . -1) (undo-tree-id44 . -1) 442) nil (26406 20940 204536 961000) 0 nil])
([nil nil ((441 . 443)) nil (26406 20940 204534 491000) 0 nil])
([nil nil ((443 . 459)) nil (26406 20940 204533 671000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . -458) (undo-tree-id42 . -1) 459) nil (26406 20940 204532 561000) 0 nil])
([nil nil ((458 . 467)) nil (26406 20940 204530 861000) 0 nil])
([nil nil ((540 . 546)) nil (26406 20940 204530 60000) 0 nil])
([nil nil ((#("o" 0 1 (ws-butler-chg chg fontified t)) . -545) (undo-tree-id40 . -1) (undo-tree-id41 . -1) 546) nil (26406 20940 204529 110000) 0 nil])
([nil nil ((545 . 546)) nil (26406 20940 204526 530000) 0 nil])
([nil nil ((#("o" 0 1 (ws-butler-chg chg fontified t)) . -545) (undo-tree-id38 . -1) (undo-tree-id39 . -1) 546) nil (26406 20940 204525 470000) 0 nil])
([nil nil ((545 . 554)) nil (26406 20940 204522 880000) 0 nil])
([nil nil ((#("t" 0 1 (ws-butler-chg chg fontified t)) . -551) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (#("i" 0 1 (ws-butler-chg chg fontified t)) . -552) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (#("n" 0 1 (ws-butler-chg chg fontified t)) . -553) (undo-tree-id36 . -1) (undo-tree-id37 . -1) 554) nil (26406 20940 204521 310000) 0 nil])
([nil nil ((#("c" 0 1 (ws-butler-chg chg fontified t)) . -545) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t)) . -546) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (#("n" 0 1 (ws-butler-chg chg fontified t)) . -547) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (#("v" 0 1 (ws-butler-chg chg fontified t)) . -548) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t)) . -549) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (#("r" 0 1 (ws-butler-chg chg fontified t)) . -550) (undo-tree-id30 . -1) (undo-tree-id31 . -1) 551) nil (26406 20940 204513 830000) 0 nil])
([nil nil ((545 . 556)) nil (26406 20940 204503 460000) 0 nil])
([nil nil ((556 . 557)) nil (26406 20940 204502 590000) 0 nil])
([nil nil ((#("$" 0 1 (ws-butler-chg chg fontified t)) . -556) (undo-tree-id18 . -1) (undo-tree-id19 . -1) 557) nil (26406 20940 204501 140000) 0 nil])
([nil nil ((556 . 561)) nil (26406 20940 204497 830000) 0 nil])
([nil nil ((561 . 562)) nil (26406 20940 204497 50000) 0 nil])
([nil nil ((#("-" 0 1 (ws-butler-chg chg fontified t)) . -561) (undo-tree-id16 . -1) (undo-tree-id17 . -1) 562) nil (26406 20940 204495 860000) 0 nil])
([nil nil ((561 . 566)) nil (26406 20940 204491 980000) 0 nil])
([nil nil ((566 . 570)) nil (26406 20940 204491 130000) 0 nil])
([nil nil ((nil rear-nonsticky nil 579 . 580) (nil fontified nil 570 . 580) (570 . 580)) nil (26406 20940 204490 50000) 0 nil])
([nil nil ((#("$" 0 1 (face font-lock-variable-name-face fontified t ws-butler-chg chg)) . -570) (undo-tree-id15 . -1) 571) nil (26406 20940 204488 450000) 0 nil])
([nil nil ((#("t" 0 1 (ws-butler-chg chg fontified t)) . -561) (undo-tree-id10 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t)) . -562) (undo-tree-id11 . -1) (#(" " 0 1 (face font-lock-keyword-face ws-butler-chg chg fontified t)) . -563) (undo-tree-id12 . -1) (#("Z" 0 1 (ws-butler-chg chg fontified t)) . -564) (undo-tree-id13 . -1) (#(" " 0 1 (face font-lock-keyword-face ws-butler-chg chg fontified t)) . -565) (undo-tree-id14 . -1) 566) nil (26406 20940 204485 870000) 0 nil])
([nil nil ((574 . 580)) nil (26406 20940 204480 520000) 0 nil])
([nil nil ((556 . 557)) nil (26406 20940 204479 780000) 0 nil])
([nil nil ((561 . 562)) nil (26406 20940 204479 40000) 0 nil])
([nil nil ((580 . 581)) nil (26406 20940 204478 210000) 0 nil])
([nil nil ((582 . 588)) nil (26406 20940 204477 370000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . -585) (undo-tree-id7 . -1) (#("n" 0 1 (ws-butler-chg chg fontified t)) . -586) (undo-tree-id8 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -587) (undo-tree-id9 . -1) 588) nil (26406 20940 204475 910000) 0 nil])
([nil nil ((585 . 587)) nil (26406 20940 204464 110000) 0 nil])
([nil nil ((#("$bismap_bed" 0 1 (fontified t) 1 11 (face font-lock-variable-name-face fontified t)) . 528)) nil (26406 20940 204463 270000) 0 nil])
([nil nil ((nil rear-nonsticky nil 538 . 539) (nil fontified nil 529 . 539) (nil fontified nil 528 . 529) (528 . 539)) nil (26406 20940 204462 230000) 0 nil])
([nil nil ((nil rear-nonsticky nil 598 . 599) (nil fontified nil 589 . 599) (nil fontified nil 588 . 589) (588 . 599)) nil (26406 20940 204460 470000) 0 nil])
([nil nil ((599 . 600)) nil (26406 20940 204459 30000) 0 nil])
([nil nil ((599 . 603)) nil (26406 20940 204458 270000) 0 nil])
([nil nil ((604 . 605)) nil (26406 20940 204457 530000) 0 nil])
([nil nil ((409 . 410)) nil (26406 20940 204456 690000) 0 nil])
([nil nil ((410 . 414)) nil (26406 20940 204455 780000) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-comment-face ws-butler-chg chg fontified t)) . -413) (undo-tree-id6 . -1) 414) nil (26406 20940 204454 790000) 0 nil])
([nil nil ((413 . 416)) nil (26406 20940 204452 920000) 0 nil])
([nil nil ((#("G" 0 1 (face font-lock-comment-face ws-butler-chg chg fontified t)) . -412) (undo-tree-id2 . -1) (#("e" 0 1 (face font-lock-comment-face ws-butler-chg chg fontified t)) . -413) (undo-tree-id3 . -1) (#("r" 0 1 (face font-lock-comment-face ws-butler-chg chg fontified t)) . -414) (undo-tree-id4 . -1) (#("t" 0 1 (face font-lock-comment-face ws-butler-chg chg fontified t)) . -415) (undo-tree-id5 . -1) 416) nil (26406 20940 204451 120000) 0 nil])
([nil nil ((412 . 421)) nil (26406 20940 204445 970000) 0 nil])
([nil nil ((616 . 617)) nil (26406 20940 204445 50000) 0 nil])
([nil nil ((617 . 619)) nil (26406 20940 204443 900000) 0 nil])
([nil nil ((#("#" 0 1 (face font-lock-comment-delimiter-face fontified t ws-butler-chg chg)) . -617) (undo-tree-id0 . -1) (#(" " 0 1 (face font-lock-comment-delimiter-face fontified t ws-butler-chg chg)) . -618) (undo-tree-id1 . -1) 619) nil (26406 20940 204441 800000) 0 nil])
([nil nil ((#("

" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg delete)) . 615) (617 . 617) (#(" " 0 1 (face font-lock-comment-face ws-butler-chg chg fontified t)) . 420) 617) nil (26406 20940 204424 680000) 0 nil])
([nil nil ((615 . 616) (t 26406 20940 204190 398000)) nil (26406 21266 816781 130000) 0 nil])
([nil nil ((616 . 621)) nil (26406 21266 816779 690000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -618) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -619) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (#("m" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -620) (undo-tree-id31 . -1) (undo-tree-id32 . -1) 621) nil (26406 21266 816777 600000) 0 nil])
([nil nil ((618 . 633)) nil (26406 21266 816770 290000) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil ws-butler-chg chg face font-lock-comment-face)) . 636) (634 . 636) (633 . 635)) nil (26406 21266 816768 820000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-delimiter-face)) . -634) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-comment-delimiter-face)) . -635) (undo-tree-id25 . -1) (undo-tree-id26 . -1) 636) nil (26406 21266 816766 120000) 0 nil])
([nil nil ((634 . 635)) nil (26406 21266 816760 440000) 0 nil])
([nil nil ((635 . 640)) nil (26406 21266 816759 320000) 0 nil])
([nil nil ((640 . 641)) nil (26406 21266 816757 740000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -639) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (#("d" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -640) (undo-tree-id21 . -1) (undo-tree-id22 . -1) 641) nil (26406 21266 816755 400000) 0 nil])
([nil nil ((639 . 646)) nil (26406 21266 816748 880000) 0 nil])
([nil nil ((646 . 647)) nil (26406 21266 816747 530000) 0 nil])
([nil nil ((647 . 648)) nil (26406 21266 816746 60000) 0 nil])
([nil nil ((648 . 650)) nil (26406 21266 816744 680000) 0 nil])
([nil nil ((650 . 658)) nil (26406 21266 816743 540000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t ws-butler-chg chg)) . -653) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg)) . -654) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg)) . -655) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -656) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -657) (undo-tree-id17 . -1) (undo-tree-id18 . -1) 658) nil (26406 21266 816740 530000) 0 nil])
([nil nil ((653 . 661)) nil (26406 21266 816728 990000) 0 nil])
([nil nil ((661 . 670)) nil (26406 21266 816727 600000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t ws-butler-chg chg)) . -668) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (#("s" 0 1 (fontified t ws-butler-chg chg)) . -669) (undo-tree-id7 . -1) (undo-tree-id8 . -1) 670) nil (26406 21266 816725 440000) 0 nil])
([nil nil ((668 . 669)) nil (26406 21266 816719 460000) 0 nil])
([nil nil ((669 . 674)) nil (26406 21266 816718 200000) 0 nil])
([nil nil ((#("successul" 0 9 (fontified nil ws-butler-chg chg)) . 675) (undo-tree-id2 . -9) (undo-tree-id3 . -9) (undo-tree-id4 . -6) (665 . 675) 674) nil (26406 21266 816716 210000) 0 nil])
([nil nil ((675 . 677)) nil (26406 21266 816710 920000) 0 nil])
([nil nil ((677 . 678)) nil (26406 21266 816709 640000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -677) (undo-tree-id0 . -1) (undo-tree-id1 . -1) 678) nil (26406 21266 816707 190000) 0 nil])
([nil nil ((665 . 686)) nil (26406 21266 816693 620000) 0 nil])
([nil nil ((686 . 690)) nil (26406 21266 816691 600000) 0 nil])
([nil nil ((702 . 703)) nil (26406 21266 816687 500000) 0 nil])
([nil nil ((#("echo converting 'chrZ' in $bismap_bg to 'Z' in  $bismap_bed ..." 0 4 (face (font-lock-type-face) fontified t) 4 16 (fontified t) 16 22 (face font-lock-string-face fontified t) 22 25 (face font-lock-keyword-face fontified t) 25 27 (fontified t) 27 36 (face font-lock-variable-name-face fontified t) 36 40 (fontified t) 40 43 (face font-lock-string-face fontified t) 43 46 (face font-lock-keyword-face fontified t) 46 49 (fontified t) 49 59 (face font-lock-variable-name-face fontified t) 59 63 (fontified t)) . 551) (undo-tree-id2 . -54) (t 26406 21266 818848 460000)) nil (26406 21605 582874 974000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg chg face font-lock-comment-face fontified nil)) . 502) (500 . 502) (499 . 501)) nil (26406 21605 582871 664000) 0 nil])
([nil nil ((#("#" 0 1 (face font-lock-comment-delimiter-face ws-butler-chg chg fontified t)) . -500) (undo-tree-id0 . -1) (#(" " 0 1 (face font-lock-comment-delimiter-face ws-butler-chg chg fontified t)) . -501) (undo-tree-id1 . -1) 502) nil (26406 21605 582868 424000) 0 nil])
([nil nil ((nil rear-nonsticky nil 562 . 563) (nil fontified nil 559 . 563) (nil fontified nil 549 . 559) (nil fontified nil 546 . 549) (nil fontified nil 543 . 546) (nil fontified nil 540 . 543) (nil fontified nil 536 . 540) (nil fontified nil 527 . 536) (nil fontified nil 525 . 527) (nil fontified nil 522 . 525) (nil fontified nil 516 . 522) (nil fontified nil 504 . 516) (nil fontified nil 500 . 504) (500 . 563)) nil (26406 21605 582850 684000) 0 nil])
([nil nil ((588 . 589)) nil (26406 21605 582842 384000) 0 nil])
([nil nil ((390 . 396) (t 26406 21605 581601 493000)) nil (26406 25109 768453 773000) 0 nil])
([nil nil ((#("chrZ" 0 4 (fontified t face font-lock-string-face)) . 523)) nil (26406 25109 768452 193000) 0 nil])
([nil nil ((#("''" 0 1 (fontified t face font-lock-string-face) 1 2 (fontified t ws-butler-chg delete face font-lock-string-face)) . 522) (undo-tree-id1 . -1) 523) nil (26406 25109 768450 513000) 0 nil])
([nil nil ((nil rear-nonsticky nil 525 . 526) (nil fontified nil 522 . 526) (522 . 526)) nil (26406 25109 768446 993000) 0 nil])
([nil nil ((#("Z" 0 1 (fontified t face font-lock-string-face)) . 545)) nil (26406 25109 768444 953000) 0 nil])
([nil nil ((#("''" 0 1 (fontified t face font-lock-string-face) 1 2 (fontified t ws-butler-chg delete face font-lock-string-face)) . 544) (undo-tree-id0 . -1) 545) nil (26406 25109 768442 423000) 0 nil])
([nil nil ((nil rear-nonsticky nil 544 . 545) (nil fontified nil 544 . 545) (544 . 545)) nil (26406 25109 768428 493000) 0 nil])
([nil current ((565 . 566)) nil (26406 25109 768422 823000) 0 nil])
nil
